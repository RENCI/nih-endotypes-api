# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from util import deserialize_model


class EndotypesPeriod(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, start_time: datetime=None, end_time: datetime=None):
        """
        EndotypesPeriod - a model defined in Swagger

        :param start_time: The start_time of this EndotypesPeriod.
        :type start_time: datetime
        :param end_time: The end_time of this EndotypesPeriod.
        :type end_time: datetime
        """
        self.swagger_types = {
            'start_time': datetime,
            'end_time': datetime
        }

        self.attribute_map = {
            'start_time': 'start_time',
            'end_time': 'end_time'
        }

        self._start_time = start_time
        self._end_time = end_time

    @classmethod
    def from_dict(cls, dikt) -> 'EndotypesPeriod':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The endotypes_period of this EndotypesPeriod.
        :rtype: EndotypesPeriod
        """
        return deserialize_model(dikt, cls)

    @property
    def start_time(self) -> datetime:
        """
        Gets the start_time of this EndotypesPeriod.

        :return: The start_time of this EndotypesPeriod.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time: datetime):
        """
        Sets the start_time of this EndotypesPeriod.

        :param start_time: The start_time of this EndotypesPeriod.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self) -> datetime:
        """
        Gets the end_time of this EndotypesPeriod.

        :return: The end_time of this EndotypesPeriod.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time: datetime):
        """
        Sets the end_time of this EndotypesPeriod.

        :param end_time: The end_time of this EndotypesPeriod.
        :type end_time: datetime
        """

        self._end_time = end_time

