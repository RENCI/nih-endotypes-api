# coding: utf-8

from __future__ import absolute_import
from models.visit import Visit
from models.base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from util import deserialize_model


class Body(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, date_of_birth: str=None, race: str=None, sex: str=None, visit: List[Visit]=None):
        """
        Body - a model defined in Swagger

        :param date_of_birth: The date_of_birth of this Body.
        :type date_of_birth: str
        :param race: The race of this Body.
        :type race: str
        :param sex: The sex of this Body.
        :type sex: str
        :param visit: The visit of this Body.
        :type visit: List[Visit]
        """
        self.swagger_types = {
            'date_of_birth': str,
            'race': str,
            'sex': str,
            'visit': List[Visit]
        }

        self.attribute_map = {
            'date_of_birth': 'dateOfBirth',
            'race': 'race',
            'sex': 'sex',
            'visit': 'visit'
        }

        self._date_of_birth = date_of_birth
        self._race = race
        self._sex = sex
        self._visit = visit

    @classmethod
    def from_dict(cls, dikt) -> 'Body':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body of this Body.
        :rtype: Body
        """
        return deserialize_model(dikt, cls)

    @property
    def date_of_birth(self) -> str:
        """
        Gets the date_of_birth of this Body.

        :return: The date_of_birth of this Body.
        :rtype: str
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth: str):
        """
        Sets the date_of_birth of this Body.

        :param date_of_birth: The date_of_birth of this Body.
        :type date_of_birth: str
        """

        self._date_of_birth = date_of_birth

    @property
    def race(self) -> str:
        """
        Gets the race of this Body.

        :return: The race of this Body.
        :rtype: str
        """
        return self._race

    @race.setter
    def race(self, race: str):
        """
        Sets the race of this Body.

        :param race: The race of this Body.
        :type race: str
        """

        self._race = race

    @property
    def sex(self) -> str:
        """
        Gets the sex of this Body.

        :return: The sex of this Body.
        :rtype: str
        """
        return self._sex

    @sex.setter
    def sex(self, sex: str):
        """
        Sets the sex of this Body.

        :param sex: The sex of this Body.
        :type sex: str
        """

        self._sex = sex

    @property
    def visit(self) -> List[Visit]:
        """
        Gets the visit of this Body.

        :return: The visit of this Body.
        :rtype: List[Visit]
        """
        return self._visit

    @visit.setter
    def visit(self, visit: List[Visit]):
        """
        Sets the visit of this Body.

        :param visit: The visit of this Body.
        :type visit: List[Visit]
        """

        self._visit = visit

