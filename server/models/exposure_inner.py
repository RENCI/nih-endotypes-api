# coding: utf-8

from __future__ import absolute_import
from models.base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from util import deserialize_model


class ExposureInner(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, value: str=None, units: str=None, exposure_type: str=None):
        """
        ExposureInner - a model defined in Swagger

        :param value: The value of this ExposureInner.
        :type value: str
        :param units: The units of this ExposureInner.
        :type units: str
        :param exposure_type: The exposure_type of this ExposureInner.
        :type exposure_type: str
        """
        self.swagger_types = {
            'value': str,
            'units': str,
            'exposure_type': str
        }

        self.attribute_map = {
            'value': 'value',
            'units': 'units',
            'exposure_type': 'exposureType'
        }

        self._value = value
        self._units = units
        self._exposure_type = exposure_type

    @classmethod
    def from_dict(cls, dikt) -> 'ExposureInner':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The exposure_inner of this ExposureInner.
        :rtype: ExposureInner
        """
        return deserialize_model(dikt, cls)

    @property
    def value(self) -> str:
        """
        Gets the value of this ExposureInner.

        :return: The value of this ExposureInner.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """
        Sets the value of this ExposureInner.

        :param value: The value of this ExposureInner.
        :type value: str
        """

        self._value = value

    @property
    def units(self) -> str:
        """
        Gets the units of this ExposureInner.

        :return: The units of this ExposureInner.
        :rtype: str
        """
        return self._units

    @units.setter
    def units(self, units: str):
        """
        Sets the units of this ExposureInner.

        :param units: The units of this ExposureInner.
        :type units: str
        """

        self._units = units

    @property
    def exposure_type(self) -> str:
        """
        Gets the exposure_type of this ExposureInner.

        :return: The exposure_type of this ExposureInner.
        :rtype: str
        """
        return self._exposure_type

    @exposure_type.setter
    def exposure_type(self, exposure_type: str):
        """
        Sets the exposure_type of this ExposureInner.

        :param exposure_type: The exposure_type of this ExposureInner.
        :type exposure_type: str
        """

        self._exposure_type = exposure_type

