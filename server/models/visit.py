# coding: utf-8

from __future__ import absolute_import
from models.exposure import Exposure
import re
from models.base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from util import deserialize_model


class Visit(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, time: datetime=None, lat: str=None, lon: str=None, visit_type: str=None,
                        icd_codes: str=None, exposure: Exposure=None):
        """
        Visit - a model defined in Swagger

        :param time: The time of this Visit.
        :type time: datetime
        :param lat: The lat of this Visit.
        :type lat: str
        :param lon: The lon of this Visit.
        :type lon: str
        :param visit_type: The visit_type of this Visit.
        :type visit_type: str
        :param icd_codes: The icd_codes of this Visit.
        :type icd_codes: str
        :param exposure: The exposure of this Visit.
        :type exposure: Exposure
        """
        self.swagger_types = {
            'time': datetime,
            'lat': str,
            'lon': str,
            'visit_type': str,
            'icd_codes': str,
            'exposure': Exposure
        }

        self.attribute_map = {
            'time': 'time',
            'lat': 'lat',
            'lon': 'lon',
            'visit_type': 'visit_type',
            'icd_codes': 'icd_codes',
            'exposure': 'exposure'
        }

        self._time = time
        self._lat = lat
        self._lon = lon
        self._visit_type = visit_type
        self._icd_codes = icd_codes
        self._exposure = exposure

    @classmethod
    def from_dict(cls, dikt) -> 'Visit':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The visit of this Visit.
        :rtype: Visit
        """
        return deserialize_model(dikt, cls)

    @property
    def time(self) -> datetime:
        """
        Gets the time of this Visit.

        :return: The time of this Visit.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time: datetime):
        """
        Sets the time of this Visit.

        :param time: The time of this Visit.
        :type time: datetime
        """

        self._time = time


    @property
    def lat(self) -> str:
        """
        Gets the lat of this Visit.

        :return: The lat of this Visit.
        :rtype: str
        """
        return self._lat

    @lat.setter
    def lat(self, lat: str):
        """
        Sets the lat of this Visit.

        :param lat: The lat of this Visit.
        :type lat: str
        """

        self._lat = lat


    @property
    def lon(self) -> str:
        """
        Gets the lon of this Visit.

        :return: The lon of this Visit.
        :rtype: str
        """
        return self._lon


    @lon.setter
    def lon(self, lon: str):
        """
        Sets the lon of this Visit.

        :param lon: The lon of this Visit.
        :type lon: str
        """

        self._lon = lon

    @property
    def visit_type(self) -> str:
        """
        Gets the visit_type of this Visit.

        :return: The visit_type of this Visit.
        :rtype: str
        """
        return self._visit_type

    @visit_type.setter
    def visit_type(self, visit_type: str):
        """
        Sets the visit_type of this Visit.

        :param visit_type: The visit_type of this Visit.
        :type visit_type: str
        """
        if visit_type is not None and not re.search('^(INPATIENT|OUTPATIENT|EMERGENCY|inpatient|outpatient|emergency)$', visit_type):
            raise ValueError("Invalid value for `visit_type`, must be following pattern or equal "
                             "to `/^(INPATIENT|OUTPATIENT|EMERGENCY|inpatient|outpatient|emergency)$/`")

        self._visit_type = visit_type

    @property
    def icd_codes(self) -> str:
        """
        Gets the icd_codes of this Visit.

        :return: The icd_codes of this Visit.
        :rtype: str
        """
        return self._icd_codes

    @icd_codes.setter
    def icd_codes(self, icd_codes: str):
        """
        Sets the icd_codes of this Visit.

        :param icd_codes: The icd_codes of this Visit.
        :type icd_codes: str
        """
        self._icd_codes = icd_codes

    @property
    def exposure(self) -> Exposure:
        """
        Gets the exposure of this Visit.

        :return: The exposure of this Visit.
        :rtype: Exposure
        """
        return self._exposure

    @exposure.setter
    def exposure(self, exposure: Exposure):
        """
        Sets the exposure of this Visit.

        :param exposure: The exposure of this Visit.
        :type exposure: Exposure
        """

        self._exposure = exposure

